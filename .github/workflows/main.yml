name: CI/CD Workflow for Svelte and Node.js

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Setup Node.js environment
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20  # Latest version

      # Step 3: Install dependencies
      - name: Install dependencies
        run: npm ci  # Clean install for Node.js dependencies

      # Step 4: Build the Svelte app
      - name: Build Svelte app
        run: npm run build  # Ensure your package.json has a build script for Svelte

      # Step 5: Test Playwright Svelte with Vercel
      - name: Test Playwright Svelte
        uses: machycek/wait-for-vercel-preview@v1.3.3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}  # GitHub token
          url_part: '<your-vercel-url-part>'  # Add the relevant Vercel URL part
          max_timeout: 300  # Optional, wait time in seconds
          environment: 'production'  # Optional, environment name
          allow_inactive: true  # Optional, allow inactive deployments
          check_interval: 5  # Optional, set check interval in seconds
          vercel_password: ${{ secrets.VERCEL_PASSWORD }}  # Optional, if Vercel is password protected
          path: '/'  # Optional, path to check

      # Step 6: Deploy to GitHub Pages (if needed)
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public  # Adjust to your Svelte build output folder (usually 'public')
